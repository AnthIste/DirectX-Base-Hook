//return;
	//MessageBoxW(0, L"Attempting a runtime DirectX hook...", L"DX Hook", MB_ICONINFORMATION);
	
	/*WNDCLASSEXW wc;

    ZeroMemory(&wc, sizeof(WNDCLASSEXW));

    wc.cbSize = sizeof(WNDCLASSEX);
    wc.style = CS_HREDRAW | CS_VREDRAW;
    wc.lpfnWndProc = WndProc;
    wc.hInstance = 0;
    wc.hCursor = LoadCursor(NULL, IDC_ARROW);
    wc.hbrBackground = (HBRUSH)COLOR_WINDOW;
    wc.lpszClassName = L"WindowClass";

    RegisterClassExW(&wc);

    HWND hWndDummy = CreateWindowExW(NULL,
                          L"WindowClass",
                          L"Our First Direct3D Program",
                          WS_OVERLAPPEDWINDOW,
                          300, 300,
                          800, 600,
                          NULL,
                          NULL,
                          0,
                          NULL);

	if (!hWndDummy) {
		//MessageBoxW(0, L"Created dummy window", L"DX Hook", MB_ICONERROR);
		//MessageBoxW(0, System::GetSystemError().c_str(), L"DX Hook", MB_ICONERROR);
		return;
	} else {
		//MessageBoxW(0, L"Created dummy window", L"DX Hook", MB_ICONINFORMATION);
	}
	
	IDirect3D9* d3dDummy = Direct3DCreate9(D3D_SDK_VERSION);

	if (!d3dDummy) {
		//MessageBoxW(0, L"Created dummy IDirect3D object", L"DX Hook", MB_ICONERROR);
		return;
	} else {
		//MessageBoxW(0, L"Created dummy IDirect3D object", L"DX Hook", MB_ICONINFORMATION);
	}

	IDirect3DDevice9* d3dDevDummy;
	D3DPRESENT_PARAMETERS d3dpp;    // create a struct to hold various device information

    ZeroMemory(&d3dpp, sizeof(d3dpp));    // clear out the struct for use
    d3dpp.Windowed = TRUE;    // program windowed, not fullscreen
    d3dpp.SwapEffect = D3DSWAPEFFECT_DISCARD;    // discard old frames
    d3dpp.hDeviceWindow = hWndDummy;    // set the window to be used by Direct3D
	d3dpp.BackBufferWidth = 1;
	d3dpp.BackBufferHeight = 1;
	d3dpp.BackBufferFormat = D3DFMT_UNKNOWN;

	//MessageBoxW(0, L"Attempting to create dummy device...", L"DX Hook", MB_ICONINFORMATION);

    // create a device class using this information and the info from the d3dpp stuct
    HRESULT hResult = d3dDummy->CreateDevice(D3DADAPTER_DEFAULT,
					  D3DDEVTYPE_SW,
                      hWndDummy,
                      D3DCREATE_SOFTWARE_VERTEXPROCESSING,
                      &d3dpp,
                      &d3dDevDummy);

	if (!hResult || !d3dDevDummy) {
		//MessageBoxW(0, L"Created dummy d3d device", L"DX Hook", MB_ICONERROR);
		return;
	} else {
		MessageBoxW(0, L"Created dummy d3d device", L"DX Hook", MB_ICONINFORMATION);
	}

	pVtable = CHook::GetVtableAddress((void*)d3dDevDummy);

	//MessageBoxW(0, L"Stored vtable", L"DX Hook", MB_ICONINFORMATION);

	d3dDevDummy->Release();
	d3dDummy->Release();

	DestroyWindow(hWndDummy);

	ApplyPendingHooks();*/